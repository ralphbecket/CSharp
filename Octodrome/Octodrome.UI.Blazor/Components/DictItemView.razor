<div class="DictItemView">
    @foreach (var kv in Item.Value.OrderBy(x => x.Key))
    {
        @if (DisplayVertically(kv.Value))
        {
            <div class="DictItemKeyValueV">
                <div class="DictItemKeyV">
                    <DictItemKeyView ViewState="@ViewState" DictID="@Item.ID" Key="@kv.Key" ValueID="@kv.Value" />
                </div>
                <div class="DictItemValueV">
                    <ItemView ViewState="@ViewState" Item="@ViewState.Doc[kv.Value]"/>
                </div>
            </div>
        }
        else
        {
            <div class="DictItemKeyValueH">
                <div class="DictItemKeyH">
                    <DictItemKeyView ViewState="@ViewState" DictID="@Item.ID" Key="@kv.Key" ValueID="@kv.Value" />
                </div>
                <div class="DictItemValueH">
                    <ItemView ViewState="@ViewState" Item="@ViewState.Doc[kv.Value]"/>
                </div>
            </div>
        }
    }

</div>

@code {
    [Parameter]
    public ViewState ViewState { get; set; }
    [Parameter]
    public DictItem Item { get; set; }
    private bool AddingNewKey = false;
    private string NewKey = "";
    private string NewKeyValidationError = null;

    private bool DisplayVertically(Guid id) {
        var item = ViewState.Doc[id];
        var displayVertically = (
            item is DictItem ||
            item is FormItem ||
            // Other options here...
            false
        );
        return displayVertically;
    }
}
